#! /usr/bin/env python

import sys
import argparse
import logging
import etspecutil

from etspecutil.marker import MarkersFromIMODFiducialFileFactory
from etspecutil.marker import MarkersToIMODFiducialFileWriter

logger = logging.getLogger(__name__)

LOG_FORMAT = "%(asctime)-15s %(levelname)s %(name)s %(message)s"


class Parameters(object):
    """Holds command line arguments
    """
    pass


def _setup_logging(theargs):
    """Sets up logging for this application
    """
    theargs.logformat = LOG_FORMAT
    theargs.numericloglevel = logging.NOTSET
    if theargs.loglevel == 'DEBUG':
        theargs.numericloglevel = logging.DEBUG
    if theargs.loglevel == 'INFO':
        theargs.numericloglevel = logging.INFO
    if theargs.loglevel == 'WARNING':
        theargs.numericloglevel = logging.WARNING
    if theargs.loglevel == 'ERROR':
        theargs.numericloglevel = logging.ERROR
    if theargs.loglevel == 'CRITICAL':
        theargs.numericloglevel = logging.CRITICAL

    logger.setLevel(theargs.numericloglevel)
    logging.basicConfig(format=theargs.logformat)
    logging.getLogger('etspecutil.marker').setLevel(theargs.numericloglevel)
    logging.getLogger('etspecutil.util').setLevel(theargs.numericloglevel)


def shift_fiducial_file_markers(theargs):
    """Rotates 3DMarkers.txt file
    """
    logger.info('Fiducial file set to ' + theargs.inputfidfile)

    fac = MarkersFromIMODFiducialFileFactory(theargs.inputfidfile)

    markers = fac.get_markers()

    markers.shift_markers(theargs.xshift, theargs.yshift, 0)

    writer = MarkersToIMODFiducialFileWriter(theargs.outputfidfile)
    writer.write_markers(markers)


def _parse_arguments(desc, args):
    """Parses command line arguments
    """
    pargs = Parameters()
    help_formatter = argparse.RawDescriptionHelpFormatter
    parser = argparse.ArgumentParser(description=desc,
                                     formatter_class=help_formatter)
    parser.add_argument("inputfidfile",
                        help='Input IMOD .fid file')
    parser.add_argument("outputfidfile",
                        help='Output IMOD .fid file')
    parser.add_argument("--xshift", default=360, type=int,
                        help='Number of pixels to shift markers in X '
                             'direction')
    parser.add_argument("--yshift", default=360, type=int,
                        help='Number of pixels to shift markers in Y '
                             'direction')
    parser.add_argument("--log", dest="loglevel", default='WARNING',
                        choices=['DEBUG', 'INFO', 'WARNING', 'ERROR',
                                 'CRITICAL'],
                        help="Sets the logging level (default WARNING)")
    parser.add_argument('--version', action='version',
                        version=('%(prog)s ' + etspecutil.__version__))

    return parser.parse_args(args, namespace=pargs)


def main(arglist):
    desc = """
              Shifts markers in IMOD fiducial file generated by ETspec
           """

    theargs = _parse_arguments(desc, arglist[1:])
    theargs.program = arglist[0]
    theargs.version = etspecutil.__version__
    _setup_logging(theargs)

    shift_fiducial_file_markers(theargs)

if __name__ == '__main__':
    main(sys.argv)
